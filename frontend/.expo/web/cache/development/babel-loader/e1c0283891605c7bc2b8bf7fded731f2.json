{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/redex/environments/instagram/frontend/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport FeedScreen from \"./main/Feed\";\nimport MarerialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport ProfileScreen from \"./main/Profile\";\nimport AddScreen from \"./main/Add\";\nimport SearchScreen from \"./main/Search\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var MainScreen = function (_Component) {\n  _inherits(MainScreen, _Component);\n\n  var _super = _createSuper(MainScreen);\n\n  function MainScreen() {\n    _classCallCheck(this, MainScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MainScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        nitialRouteName: \"Feed\",\n        labeled: false,\n        activeColor: \"black\",\n        barStyle: {\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var size = _ref.size,\n                color = _ref.color;\n            return React.createElement(MarerialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var size = _ref3.size,\n                color = _ref3.color;\n            return React.createElement(MarerialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MainScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);","map":{"version":3,"sources":["/home/redex/environments/instagram/frontend/components/Main.js"],"names":["React","Component","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","createMaterialBottomTabNavigator","FeedScreen","MarerialCommunityIcons","ProfileScreen","AddScreen","SearchScreen","Tab","EmptyScreen","MainScreen","backgroundColor","tabBarIcon","size","color","navigation","tabPress","event","preventDefault","navigate","uid","firebase","auth","currentUser","mapStateToProps","store","userState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { View, Text } from 'react-native';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from '../redux/actions/index';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport FeedScreen from './main/Feed';\nimport MarerialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport ProfileScreen from './main/Profile';\nimport AddScreen from './main/Add';\nimport SearchScreen from './main/Search';\n\nconst Tab = createMaterialBottomTabNavigator()\nconst EmptyScreen = () => {\n    return(null)\n}\nexport class MainScreen extends Component{\n    componentDidMount(){\n       \n    }\n    render(){\n        return(\n            <Tab.Navigator \n            nitialRouteName=\"Feed\" \n            labeled={false}\n            activeColor=\"black\"\n            barStyle={{backgroundColor:\"white\"}}>\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\n                options={{\n                    tabBarIcon: ({ size, color }) => (\n                        <MarerialCommunityIcons name=\"home\" color={color} size={26}/>\n                    )\n                }}/>\n                {/* <Tab.Screen name=\"Search\" component={SearchScreen}\n                options={{\n                    tabBarIcon: ({ size, color }) => (\n                        <MarerialCommunityIcons name=\"magnify\" color={color} size={26}/>\n                    )\n                }}/>\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen}\n                listeners={({ navigation })=>({\n                    tabPress: event => {\n                        event.preventDefault()\n                        navigation.navigate(\"Add\")\n                    }\n                })}\n                options={{\n                    tabBarIcon: ({ size, color }) => (\n                        <MarerialCommunityIcons name=\"plus-box\" color={color} size={26}/>\n                    )\n                }}/> */}\n                <Tab.Screen name=\"Profile\" component={ProfileScreen}\n                listeners={({ navigation })=>({\n                    tabPress: event => {\n                        event.preventDefault()\n                        navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\n                    }\n                })}\n                options={{\n                    tabBarIcon: ({ size, color }) => (\n                        <MarerialCommunityIcons name=\"account-circle\" color={color} size={26}/>\n                    )\n                }}/>\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);"]},"metadata":{},"sourceType":"module"}
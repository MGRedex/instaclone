{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/redex/environments/instagram/frontend/components/main/Comments.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUsersData } from \"../../redux/actions/index\";\nimport { NickName, UserAvatarComments } from \"../../Styles\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport MarerialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nrequire(\"firebase/firestore\");\n\nexport function Comments(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userComment = _useState6[0],\n      setUserComment = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      CommentInputRef = _useState8[0],\n      setCommentInputRef = _useState8[1];\n\n  useEffect(function () {\n    function matchUserToComment(comments) {\n      var _loop = function _loop(i) {\n        if (comments[i].hasOwnProperty(\"user\")) {\n          return \"continue\";\n        } else {\n          var user = props.users.find(function (el) {\n            return el.uid === comments[i].creator;\n          });\n\n          if (user === undefined) {\n            props.fetchUsersData(comments[i].creator, false);\n          } else {\n            comments[i].user = user;\n          }\n        }\n      };\n\n      for (var i = 0; i < comments.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      setComments(comments);\n    }\n\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").orderBy(\"createdAt\").onSnapshot(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        matchUserToComment(comments);\n      });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  }, [props.route.params.postId, props.users]);\n\n  var onCommentSend = function onCommentSend() {\n    CommentInputRef.clear();\n    firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").add({\n      creator: firebase.auth().currentUser.uid,\n      text: userComment,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          marginTop: 10,\n          marginLeft: 4\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, React.createElement(UserAvatarComments, {\n        source: require(\"../../placeholder-images/Profile_avatar_placeholder_large.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          marginLeft: 5,\n          width: \"85%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, item.user !== undefined ? React.createElement(NickName, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 57\n        }\n      }, item.user.name) : null, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, item.text))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(UserAvatarComments, {\n    style: {\n      margin: 4,\n      flex: 1\n    },\n    source: require(\"../../placeholder-images/Profile_avatar_placeholder_large.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    ref: function ref(CommentInputRef) {\n      setCommentInputRef(CommentInputRef);\n    },\n    multiline: true,\n    style: {\n      flex: 7,\n      width: \"77%\",\n      height: \"100%\"\n    },\n    placeholder: \"Write a comment\",\n    onChangeText: function onChangeText(text) {\n      return setUserComment(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      margin: 4\n    },\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, React.createElement(MarerialCommunityIcons, {\n    name: \"send\",\n    color: \"#1A1A1A\",\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","map":{"version":3,"sources":["/home/redex/environments/instagram/frontend/components/main/Comments.js"],"names":["React","useState","useEffect","firebase","connect","bindActionCreators","fetchUsersData","NickName","UserAvatarComments","TouchableOpacity","MarerialCommunityIcons","require","Comments","props","comments","setComments","postId","setPostId","userComment","setUserComment","CommentInputRef","setCommentInputRef","matchUserToComment","i","hasOwnProperty","user","users","find","el","uid","creator","undefined","length","route","params","firestore","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","id","onCommentSend","clear","add","auth","currentUser","text","createdAt","FieldValue","serverTimestamp","flex","item","marginTop","marginLeft","flexDirection","width","name","alignItems","margin","height","mapStateToProps","store","usersState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, Image, FlatList, Button, TextInput, Touchable } from \"react-native\";\nimport { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUsersData } from \"../../redux/actions/index\";\nimport { NickName, UserAvatarComments } from \"../../Styles\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport MarerialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nrequire(\"firebase/firestore\")\n\nexport function Comments(props){\n    const [comments, setComments] = useState([])\n    const [postId, setPostId] = useState(\"\")\n    const [userComment, setUserComment] = useState(\"\")\n    const [CommentInputRef, setCommentInputRef] = useState(null)\n\n    useEffect(() => {\n        function matchUserToComment(comments){\n            for(let i = 0; i < comments.length; i++){\n                if (comments[i].hasOwnProperty(\"user\")){\n                    continue\n                }\n                else{\n                    const user = props.users.find(el => el.uid === comments[i].creator)\n                    if (user === undefined){\n                        props.fetchUsersData(comments[i].creator, false)\n                    }\n                    else{\n                        comments[i].user = user\n                    }\n                }\n                \n            }\n            setComments(comments)\n        }\n        if(props.route.params.postId !== postId){\n            firebase.firestore()\n                .collection(\"posts\")\n                .doc(props.route.params.uid)\n                .collection(\"userPosts\")\n                .doc(props.route.params.postId)\n                .collection(\"comments\")\n                .orderBy(\"createdAt\")\n                .onSnapshot((snapshot) => {\n                    let comments = snapshot.docs.map((doc) => {\n                        let data = doc.data()\n                        let id = doc.id\n                        return {id, ...data}\n                    })\n                    matchUserToComment(comments)\n                })\n            setPostId(props.route.params.postId)\n        }\n        else{\n            matchUserToComment(comments)\n        }\n    }, [props.route.params.postId, props.users])\n\n    const onCommentSend = () => {\n        CommentInputRef.clear()\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(props.route.params.uid)\n            .collection(\"userPosts\")\n            .doc(props.route.params.postId)\n            .collection(\"comments\")\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: userComment,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            })\n    }\n    return(\n        <View style={{flex:1}}>\n            <FlatList\n            numColumns={1}\n            horizontal={false}\n            data={comments}\n            renderItem={({item}) => (\n                <View style={{flex:1, marginTop:10, marginLeft:4}}>\n                    <View style={{flexDirection:\"row\"}}>\n                        <UserAvatarComments\n                            source={require('../../placeholder-images/Profile_avatar_placeholder_large.png')}/>\n                        <View style={{marginLeft:5, width:\"85%\"}}>\n                            {item.user !== undefined ? (<NickName>{item.user.name}</NickName>) : null}\n                            <Text>{item.text}</Text>\n                        </View>\n                    </View>\n                </View>\n            )}/>\n            <View style={{\n                flexDirection:\"row\", \n                alignItems:\"flex-end\"}}>\n                <UserAvatarComments\n                    style={{\n                        margin:4,\n                        flex:1}}\n                    source={require('../../placeholder-images/Profile_avatar_placeholder_large.png')}/>\n                <TextInput\n                    ref={CommentInputRef => {setCommentInputRef(CommentInputRef)}}\n                    multiline={true}\n                    style={{\n                        flex:7,\n                        width: \"77%\",\n                        height: \"100%\"}}\n                    placeholder=\"Write a comment\" \n                    onChangeText={(text) => setUserComment(text)}/>\n                <TouchableOpacity\n                    style={{\n                        margin:4}}\n                    onPress={() => onCommentSend()}>\n                    <MarerialCommunityIcons name=\"send\" color=\"#1A1A1A\" size={30}/>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\nconst mapStateToProps = (store) => ({\n    users: store.usersState.users\n})\nconst mapDispatchToProps= (dispatch) => bindActionCreators({ fetchUsersData },dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)"]},"metadata":{},"sourceType":"module"}
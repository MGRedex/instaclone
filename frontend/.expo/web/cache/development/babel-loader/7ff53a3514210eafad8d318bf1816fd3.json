{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/redex/environments/instagram/frontend/components/main/Save.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nrequire('firebase/firebase-storage');\n\nexport default function Save(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var uploadImage = function uploadImage() {\n    var uri, response, blob, childPath, task, taskProgress, taskCompleted, taskError, savePostData;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = route.params.image;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context.sent;\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n            savePostData = function savePostData(downloadURL) {\n              firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection('userPosts').doc(\"\" + Math.random().toString(36)).set({\n                downloadURL: downloadURL,\n                caption: caption,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              }).then(function () {\n                navigation.popToTop();\n              });\n            };\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: route.params.image\n    },\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Write a caption...\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/redex/environments/instagram/frontend/components/main/Save.js"],"names":["React","useState","firebase","require","Save","navigation","route","caption","setCaption","uploadImage","uri","params","image","fetch","response","blob","childPath","auth","currentUser","uid","Math","random","toString","task","storage","ref","child","put","taskProgress","snapshot","console","log","bytesTransferred","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","set","createdAt","FieldValue","serverTimestamp","popToTop","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'; \nimport { View, Image, TextInput, Text, Button } from 'react-native';\nimport firebase from 'firebase';\nrequire('firebase/firestore');\nrequire('firebase/firebase-storage');\n\nexport default function Save({navigation, route}){\n    const [caption, setCaption] = useState(\"\")\n    const uploadImage = async () => {\n        const uri = route.params.image\n        const response = await fetch(uri)\n        const blob = await response.blob()\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`\n\n        const task = firebase\n        .storage()\n        .ref()\n        .child(childPath)\n        .put(blob)\n\n        const taskProgress = (snapshot) => {\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\n        }\n\n        const taskCompleted = () => {\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                savePostData(snapshot);\n                console.log(snapshot)\n            })\n        }\n\n        const taskError = (snapshot) => {\n            console.log(snapshot)\n        }\n\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted)\n\n        const savePostData = (downloadURL) => {\n            firebase.firestore()\n            .collection('posts')\n            .doc(firebase.auth().currentUser.uid)\n            .collection('userPosts')\n            .doc(`${Math.random().toString(36)}`)\n            .set({\n                downloadURL,\n                caption,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            }).then((function(){\n                navigation.popToTop()\n            }))\n        }\n    }\n    return(\n        <View style={{flex:1}}>\n            <Image source={{uri: route.params.image}} style={{flex:1}}/>\n            <TextInput \n            placeholder=\"Write a caption...\"\n            onChangeText={(caption) => setCaption(caption)}/>\n            <Button title=\"Save\" onPress={() => uploadImage()}/>\n        </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}